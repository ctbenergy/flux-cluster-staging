---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rabbitmq
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: rabbitmq
      version: 11.6.0
      sourceRef:
        kind: HelmRepository
        name: bitnami
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    replicaCount: 1
    # resources:
    # requests:
    #    cpu: 100m
    #    memory: 128Mi
    #  limits:
    #    memory: 256Mi
    ldap:
      enabled: true
      uri: "ldap://openldap.kube-system.svc.cluster.local"
      port: "389"
      userDnPattern: ${SECRET_LDAP_BINDDN}
      binddn: ${SECRET_LDAP_BINDDN}
      bindpw: ${SECRET_LDAP_ADMIN_PASSWORD}
      basedn: ${SECRET_LDAP_BASE_DN}
      uidField: "uid"
      authorisationEnabled: true
    persistence:
      enabled: true
      existingClaim: rabbitmq-pvc
    service:
      type: ClusterIP
      extraPorts:
        - name: mqtt
          port: 1883
          targetPort: 1883
        - name: mqtts
          port: 8883
          targetPort: 8883
    image:
      # registry: docker.io
      # repository: bitnami/rabbitmq
      # tag: 3.11.3-debian-11-r0
      pullPolicy: IfNotPresent
    auth:
      username: admin
      existingPasswordSecret: rabbitmq-secret
      existingErlangSecret: rabbitmq-secret
    #plugins: "rabbitmq_management rabbitmq_peer_discovery_k8s"
    communityPlugins: ""
    extraPlugins: "rabbitmq_auth_backend_ldap rabbitmq_mqtt rabbitmq_web_mqtt"
    clustering:
      enabled: false
    ingress:
      enabled: true
      ingressClassName: "nginx"
      path: /
      hostname: rabbitmq.${SECRET_DOMAIN}
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-staging"
        external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
        external-dns/is-public: "true"
